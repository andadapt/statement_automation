# Generated by Django 5.1.7 on 2025-03-29 14:19

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('compliance', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name='compliancereportitem',
            name='report',
        ),
        migrations.AlterField(
            model_name='portfolio',
            name='name',
            field=models.CharField(max_length=255, unique=True),
        ),
        migrations.AlterField(
            model_name='product',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='product',
            name='product_url',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='product',
            name='statement_url',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='HistoricalReport',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('prepared_by_date', models.DateField(blank=True, null=True)),
                ('last_reviewed_date', models.DateField(blank=True, null=True)),
                ('last_tested_date', models.DateField(blank=True, null=True)),
                ('days_since_last_tested', models.IntegerField(blank=True, null=True)),
                ('tested_by', models.CharField(blank=True, max_length=255, null=True)),
                ('feedback_header', models.TextField(blank=True, null=True)),
                ('reporting_problems', models.TextField(blank=True, null=True)),
                ('enforcement_procedure', models.TextField(blank=True, null=True)),
                ('legal_compliance', models.TextField(blank=True, null=True)),
                ('legal_wording_not_present', models.BooleanField(default=False)),
                ('compliance_status', models.CharField(blank=True, max_length=50, null=True)),
                ('wcag', models.CharField(blank=True, max_length=50, null=True)),
                ('feedback_contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('feedback_contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('reporting_problems_contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('reporting_problems_contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('non_accessible_content', models.TextField(blank=True, null=True)),
                ('date_report_ran', models.DateField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='compliance.product')),
            ],
            options={
                'verbose_name': 'historical report',
                'verbose_name_plural': 'historical reports',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prepared_by_date', models.DateField(blank=True, null=True)),
                ('last_reviewed_date', models.DateField(blank=True, null=True)),
                ('last_tested_date', models.DateField(blank=True, null=True)),
                ('days_since_last_tested', models.IntegerField(blank=True, null=True)),
                ('tested_by', models.CharField(blank=True, max_length=255, null=True)),
                ('feedback_header', models.TextField(blank=True, null=True)),
                ('reporting_problems', models.TextField(blank=True, null=True)),
                ('enforcement_procedure', models.TextField(blank=True, null=True)),
                ('legal_compliance', models.TextField(blank=True, null=True)),
                ('legal_wording_not_present', models.BooleanField(default=False)),
                ('compliance_status', models.CharField(blank=True, max_length=50, null=True)),
                ('wcag', models.CharField(blank=True, max_length=50, null=True)),
                ('feedback_contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('feedback_contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('reporting_problems_contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('reporting_problems_contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('non_accessible_content', models.TextField(blank=True, null=True)),
                ('date_report_ran', models.DateField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='compliance.product')),
            ],
        ),
        migrations.DeleteModel(
            name='ComplianceReport',
        ),
        migrations.DeleteModel(
            name='ComplianceReportItem',
        ),
    ]
